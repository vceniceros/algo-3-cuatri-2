TestCase subclass: #TestBuscarPorDiccionario	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-casos-de-uso'!!TestBuscarPorDiccionario methodsFor: 'tests' stamp: 'valentinoceniceros 5/9/2024 19:44'!test06buscamosUnaTransformacionMonoGiganteEnUnDiccYTransformamosAAlguien	"arrange"	|kiEsperado kiObtenido  peleador transformacion buscar|	buscar := BuscarTransformacion new.	transformacion := buscar buscarPorClave: 'Mono Gigante'.	peleador := Peleador ConNombre: 'Goku' Ki: 5000  yTransformacion: transformacion . 	kiEsperado := 65536.	"act"	kiObtenido  :=  peleador ki  .	"assert"	self assert: kiObtenido   equals: kiEsperado  ! !!TestBuscarPorDiccionario methodsFor: 'tests' stamp: 'valentinoceniceros 5/9/2024 23:15'!test03buscamosUnCriterioFuerteEnUnDiccYPedimosUnPeleador	"arrange"	|peleadorEsperado peleadorObtenido criterio buscar peleador1 peleador2 |	buscar := BuscarCriterio new.	criterio := buscar buscarPorClave: 'Fuerte'.	peleador1 := Peleador ConNombre: 'Goku' Ki: 9000 yTransformacion: Base new.	peleador2 := Peleador ConNombre: 'nappa' Ki: 5000 yTransformacion: Base new.		criterio agregarLectura: peleador1.	criterio agregarLectura: peleador2.	peleadorEsperado := 'Goku'.	"act"	peleadorObtenido  := criterio obtenerPeleador  .	"assert"	self assert: peleadorObtenido  darNombre   equals: peleadorEsperado  ! !!TestBuscarPorDiccionario methodsFor: 'tests' stamp: 'valentinoceniceros 5/9/2024 23:16'!test04buscamosUnCriterioDebilEnUnDiccYPedimosUnPeleador	"arrange"	|peleadorEsperado peleadorObtenido criterio buscar peleador1 peleador2 |		buscar := BuscarCriterio new.	criterio := buscar buscarPorClave: 'Debil'.		peleador1 := Peleador ConNombre: 'Goku' Ki: 9000 yTransformacion: Base new.	peleador2 := Peleador ConNombre: 'nappa' Ki: 5000 yTransformacion: Base new.		criterio agregarLectura: peleador1.	criterio agregarLectura: peleador2.	peleadorEsperado := 'nappa'.	"act"	peleadorObtenido  := criterio obtenerPeleador  .	"assert"	self assert: peleadorObtenido  darNombre   equals: peleadorEsperado  ! !!TestBuscarPorDiccionario methodsFor: 'tests' stamp: 'valentinoceniceros 4/18/2024 23:49'!test02buscamosUnRastreadorNuevoEnUnDiccYMedimosUnKi	"arrange"	|kiEsperado kiObtenido rastreador buscar|	buscar := BuscarRastreador  new.	rastreador := buscar buscarPorClave: 'Nuevo'.	kiEsperado := 5000.	"act"	kiObtenido := rastreador calcularKi: 5000.	"assert"	self assert: kiObtenido  equals: kiEsperado  ! !!TestBuscarPorDiccionario methodsFor: 'tests' stamp: 'valentinoceniceros 4/19/2024 00:18'!test01buscamosUnRastreadorViejoEnUnDiccYMedimosUnKi	"arrange"	|kiEsperado kiObtenido rastreador buscar|	buscar := BuscarRastreador  new.	rastreador := buscar buscarPorClave: 'Viejo'.	kiEsperado := 5000.	"act"	kiObtenido := rastreador calcularKi: 5000.	"assert"	self assert: kiObtenido  equals: kiEsperado  ! !!TestBuscarPorDiccionario methodsFor: 'tests' stamp: 'valentinoceniceros 5/9/2024 19:44'!test05buscamosUnaTransformacionKaiokenEnUnDiccYTransformamosAAlguien	"arrange"	|kiEsperado kiObtenido  peleador transformacion buscar|	buscar := BuscarTransformacion new.	transformacion := buscar buscarPorClave: 'Kaio-Ken'.	peleador := Peleador ConNombre: 'Goku' Ki: 5000  yTransformacion: transformacion . 	kiEsperado := 10000.	"act"	kiObtenido  :=  peleador ki  .	"assert"	self assert: kiObtenido   equals: kiEsperado  ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!TestBuscarPorDiccionario class	instanceVariableNames: 'diccionario'!TestCase subclass: #TestCriterio	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-casos-de-uso'!!TestCriterio methodsFor: 'as yet unclassified' stamp: 'valentinoceniceros 5/9/2024 00:27'!test01MrSatanEligeAsuSiguienteRivalSegunCriterioDebil"Arrange"|peleador nombrePeleador peleadores peleador1 peleador2 peleador3 base kaioken  nombreEsperado|nombreEsperado := 'PepitoElDeLaEsquina'.peleadores := Debil new.base := Base new.kaioken  := KaioKen new.peleador1 := Peleador ConNombre: 'Cell' Ki: 1000000000 yTransformacion: base .peleador2 := Peleador ConNombre: 'Goku' Ki: 150000000  yTransformacion: kaioken .peleador3 := Peleador ConNombre: 'PepitoElDeLaEsquina' Ki: 2  yTransformacion: base .peleadores agregarLectura: peleador1 .peleadores agregarLectura: peleador2 .peleadores agregarLectura: peleador3 ."Act"peleador := peleadores obtenerPeleador .nombrePeleador := peleador darNombre ."assert"self assert: nombrePeleador   equals: nombreEsperado  ! !!TestCriterio methodsFor: 'as yet unclassified' stamp: 'valentinoceniceros 5/9/2024 00:27'!test02gokuEligeAsuSiguienteRivalSegunCriterioFuerte"Arrange"|peleador nombrePeleador peleadores peleador1 peleador2 peleador3 base kaioken  nombreEsperado|nombreEsperado := 'Cell'.peleadores := Fuerte new.base := Base new.kaioken  := KaioKen new.peleador1 := Peleador ConNombre: 'Cell' Ki: 1000000000 yTransformacion: base .peleador2 := Peleador ConNombre: 'Goku' Ki: 150000000  yTransformacion: kaioken .peleador3 := Peleador ConNombre: 'PepitoElDeLaEsquina' Ki: 2  yTransformacion: base .peleadores agregarLectura: peleador1 .peleadores agregarLectura: peleador2 .peleadores agregarLectura: peleador3 ."Act"peleador := peleadores obtenerPeleador .nombrePeleador := peleador darNombre ."assert"self assert: nombrePeleador   equals: nombreEsperado  ! !TestCase subclass: #TestExcepciones	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-casos-de-uso'!!TestExcepciones methodsFor: 'tests' stamp: 'valentinoceniceros 5/9/2024 23:14'!test02KiMenorQueCero"Arrange"| peleador |"Act"peleador := [peleador := Peleador ConNombre: 'yamcha' Ki: -50000  yTransformacion: Base new]                on: Error            do: [:ex | ex]."Assert"self assert: peleador messageText = 'kiBase no puede ser menor que 0'! !!TestExcepciones methodsFor: 'tests' stamp: 'valentinoceniceros 4/19/2024 22:34'!test03TransformacionNoExiste"Arrange"| transformacion buscador|buscador := BuscarTransformacion new."Act"transformacion  := [transformacion := buscador buscarPorClave: 'super sayayin blue' ]                on: Error            do: [:ex | ex]."Assert"self assert: transformacion  messageText = 'Clave inexistente'! !!TestExcepciones methodsFor: 'tests' stamp: 'valentinoceniceros 4/19/2024 22:35'!test04CriterioNoExiste"Arrange"| criterio buscador|buscador := BuscarCriterio  new."Act"criterio  := [criterio := buscador buscarPorClave: 'Blandito' ]                on: Error            do: [:ex | ex]."Assert"self assert: criterio   messageText = 'Clave inexistente'! !!TestExcepciones methodsFor: 'tests' stamp: 'valentinoceniceros 5/9/2024 00:28'!test01KiBaseMenorQueCero"Arrange"| peleador |"Act"peleador := [peleador := Peleador ConNombre: 'Goku' Ki: -100  yTransformacion: Base new.]                on: Error            do: [:ex | ex]."Assert"self assert: peleador messageText = 'kiBase no puede ser menor que 0'! !!TestExcepciones methodsFor: 'tests' stamp: 'valentinoceniceros 4/19/2024 22:37'!test05RastreadorNoExiste"Arrange"| rastreador buscador|buscador := BuscarRastreador  new."Act"rastreador  := [rastreador  := buscador buscarPorClave: 'Nuevecito papa' ]                on: Error            do: [:ex | ex]."Assert"self assert: rastreador   messageText = 'Clave inexistente'! !TestCase subclass: #TestPeleador	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-casos-de-uso'!!TestPeleador methodsFor: 'tests' stamp: 'valentinoceniceros 5/9/2024 19:37'!test04PicolloVeElKiDeGohanTransformadoEnMono"arrange"|kiEsperado kiObtenido peleador |kiEsperado := 16384.peleador := Peleador ConNombre: 'Gohan' Ki: 1000 yTransformacion: MonoGigante new."act"kiObtenido := peleador ki."accert"self assert: kiObtenido  equals: kiEsperado ! !!TestPeleador methodsFor: 'tests' stamp: 'valentinoceniceros 5/9/2024 00:05'!test01PicolloLlamaPorSuNombreAlPeleador"Arrange"|peleador transformacion nombre nombreEsperado|nombreEsperado := 'gohan'.transformacion := Base new.peleador := Peleador ConNombre: 'gohan' Ki: 2000  yTransformacion: transformacion ."Act"nombre := peleador darNombre. "Assert"self assert: nombre  equals: nombreEsperado ! !!TestPeleador methodsFor: 'tests' stamp: 'valentinoceniceros 5/9/2024 19:36'!test03PicolloMideElKiDeGokuEnKaioKenDesdeElCielo"Arrange"|peleador transformacion ki kiEsperado|kiEsperado := 10000.transformacion := KaioKen new.peleador := Peleador ConNombre: 'goku' Ki: 5000  yTransformacion: transformacion ."Act"ki := peleador ki. "Assert"self assert: ki  equals: kiEsperado  ! !!TestPeleador methodsFor: 'tests' stamp: 'valentinoceniceros 5/9/2024 00:21'!test02PicolloMideTuKi"Arrange"|peleador transformacion ki kiEsperado|kiEsperado := 2000.transformacion := Base new.peleador := Peleador ConNombre: 'gohan' Ki: 2000  yTransformacion: transformacion ."Act"ki := peleador ki. "Assert"self assert: ki  equals: kiEsperado  ! !TestCase subclass: #TestRastreador	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-casos-de-uso'!!TestRastreador methodsFor: 'tests' stamp: 'valentinoceniceros 5/9/2024 23:11'!test07DoctorGeroComparaRastreadoresViejosYNuevos"arrange"|peleador1 peleador2 viejo nuevo ki1 ki2|viejo := Viejo new.nuevo := Nuevo new."act"peleador1 := viejo registrarRastroConNombre: 'Vegeta' Ki: 10000  yTransformacion: MonoGigante new. peleador2 := nuevo registrarRastroConNombre: 'Goku' Ki: 9000  yTransformacion: Base new. "accert"self assert: peleador1 ki == peleador2 ki. ! !!TestRastreador methodsFor: 'tests' stamp: 'valentinoceniceros 4/13/2024 16:35'!test03doctorGeroPruebaUnRastreadorViejoConKiMayorAlLimite"arrange"|rastreador ki kiEsperado|rastreador := Viejo new .kiEsperado  := 9000."act"ki  := rastreador calcularKi: 15000."assert"self assert: ki equals: kiEsperado ! !!TestRastreador methodsFor: 'tests' stamp: 'valentinoceniceros 4/13/2024 16:34'!test01DoctorGeroPruebaUnRastreadorViejoConKiMenorAlLimite"arrange"|rastreador ki kiEsperado|rastreador := Viejo new.kiEsperado  := 4000."act"ki  := rastreador calcularKi: 4000."assert"self assert: ki equals: kiEsperado ! !!TestRastreador methodsFor: 'tests' stamp: 'valentinoceniceros 4/13/2024 16:38'!test04DoctorGeroPruebaUnRastreadorNuevoConKiMenorAlLimiteAnterior"arrange"|rastreador ki kiEsperado|rastreador := Nuevo new.kiEsperado  := 4000."act"ki  := rastreador calcularKi: 4000."assert"self assert: ki equals: kiEsperado ! !!TestRastreador methodsFor: 'tests' stamp: 'valentinoceniceros 4/13/2024 16:39'!test05DoctorGeroPruebaUnRastreadorNuevoConKiIgualAlLimiteAnterior"arrange"|rastreador ki kiEsperado|rastreador := Nuevo new.kiEsperado  := 9000."act"ki  := rastreador calcularKi: 9000."assert"self assert: ki equals: kiEsperado ! !!TestRastreador methodsFor: 'tests' stamp: 'valentinoceniceros 4/13/2024 16:40'!test06DoctorGeroPruebaUnRastreadorNuevoConKiMayorAlLimiteAnterior"arrange"|rastreador ki kiEsperado|rastreador := Nuevo new.kiEsperado  := 15000."act"ki  := rastreador calcularKi: 15000."assert"self assert: ki equals: kiEsperado ! !!TestRastreador methodsFor: 'tests' stamp: 'valentinoceniceros 4/13/2024 16:35'!test02DoctorGeroPruebaUnRastreadorViejoConKiIgualAlLimite"arrange"|rastreador ki kiEsperado|rastreador := Viejo new.kiEsperado  := 9000."act"ki  := rastreador calcularKi: 9000."assert"self assert: ki equals: kiEsperado ! !TestCase subclass: #TestTransformaciones	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-casos-de-uso'!!TestTransformaciones methodsFor: 'tests' stamp: 'valentinoceniceros 4/13/2024 17:04'!test01kaiosamaMideTuKiBase"Arrange"|kiTransformacion kiEsperado transformacion|kiEsperado := 5000.transformacion := Base new."Act"kiTransformacion := transformacion transformarKi: 5000."Accert"self assert: kiTransformacion  equals: kiEsperado ! !!TestTransformaciones methodsFor: 'tests' stamp: 'valentinoceniceros 4/17/2024 19:35'!test03kaiosamaPoneUnaLunaFalsaParaExperimentar"Arrange"|kiTransformacion kiEsperado transformacion|kiEsperado := 65536.transformacion := MonoGigante new."Act"kiTransformacion := transformacion transformarKi: 5000."Accert"self assert: kiTransformacion  equals: kiEsperado ! !!TestTransformaciones methodsFor: 'tests' stamp: 'valentinoceniceros 4/13/2024 17:05'!test02kaiosamaEnseñaElKaioken"Arrange"|kiTransformacion kiEsperado transformacion|kiEsperado := 10000.transformacion := KaioKen new."Act"kiTransformacion := transformacion transformarKi: 5000."Accert"self assert: kiTransformacion  equals: kiEsperado ! !