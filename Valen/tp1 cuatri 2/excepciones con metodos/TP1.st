Object subclass: #AlgoOlimpicos	instanceVariableNames: 'criterio atletas'	classVariableNames: ''	package: 'TP1'!!AlgoOlimpicos methodsFor: 'not defined category' stamp: '9/16/2024 20:27'!obtenerAtletaSegunCriterio	^ (criterio obtenerAtletaPorCriterio: atletas ) darNombre ! !!AlgoOlimpicos methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 14:02'!pesoMaximoDe: unAtleta 	 ^ (atletas detect: [:atletaEnLista | atletaEnLista compararNombre: unAtleta]) calcularPesoMaximo.! !!AlgoOlimpicos methodsFor: 'initialization' stamp: 'ValentinoCeniceros 9/23/2024 01:09'!initialize 	atletas := Set new.! !!AlgoOlimpicos methodsFor: 'constructor' stamp: 'ValentinoCeniceros 9/22/2024 17:31'!conCriterioMas: unCriterio 	criterio := SeleccionadorDeCriterio seleccionar: unCriterio . 	self! !!AlgoOlimpicos methodsFor: 'agregado' stamp: '9/15/2024 20:16'!registrarAtletaConNombre: unNombre dePeso: unPeso yAltura: unaAltura yEdad: unaEdad yNacionalidad: unaNacionalidad 	|atleta|	atleta := Atleta conNombre: unNombre yPeso: unPeso yAltura: unaAltura yEdad: unaEdad yNacionalidad: unaNacionalidad .	atletas add: atleta ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoOlimpicos class	instanceVariableNames: ''!!AlgoOlimpicos class methodsFor: 'constructor' stamp: 'ValentinoCeniceros 9/22/2024 17:23'!conCriterioMas:unCriterio	^self new conCriterioMas: unCriterio ! !Error subclass: #AlturaInvalidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlturaInvalidaError class	instanceVariableNames: ''!!AlturaInvalidaError class methodsFor: 'as yet unclassified' stamp: 'ValentinoCeniceros 9/22/2024 20:16'!condicionDeError: unaAltura	^ unaAltura < 1.25! !!AlturaInvalidaError class methodsFor: 'exceptioninstantiator' stamp: 'ValentinoCeniceros 9/22/2024 12:40'!signal	^ self new signal: 'La altura minima es 1.25.'! !Object subclass: #Atleta	instanceVariableNames: 'nombre edad nacionalidad pesoAtleta'	classVariableNames: ''	package: 'TP1'!!Atleta methodsFor: 'not defined category' stamp: '9/15/2024 20:23'!compararNombre: unAtleta	^nombre = unAtleta  .! !!Atleta methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 14:07'!calcularPesoMaximo   ^edad calcularPorcentaje: (nacionalidad calcularPorcentaje: pesoAtleta).! !!Atleta methodsFor: 'not defined category' stamp: '9/13/2024 20:31'!darNombre	^nombre.! !!Atleta methodsFor: 'constructor' stamp: 'ValentinoCeniceros 9/23/2024 00:22'!conNombre: unNombre yPeso: unPeso  yAltura: unaAltura yEdad: unaEdad  yNacionalidad: unaNacionalidad 	nombre := unNombre .	pesoAtleta := Peso deValor: unPeso .	edad := SeleccionadorDeEdad seleccionar: unaEdad  yAltura: unaAltura . 	nacionalidad := SeleccionadorDeNacion seleccionar: unaNacionalidad  .	self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Atleta class	instanceVariableNames: ''!!Atleta class methodsFor: 'constructor' stamp: 'ValentinoCeniceros 9/23/2024 00:22'!conNombre: unNombre yPeso: unPeso yAltura: unaAltura yEdad: unaEdad yNacionalidad: unaNacionalidad	(NombreAtletaInvalido condicionDeError: unNombre  ) ifTrue: [NombreAtletaInvalido signal ].	^self new conNombre:  unNombre yPeso: unPeso  yAltura: unaAltura   yEdad: unaEdad  yNacionalidad: unaNacionalidad ! !Error subclass: #AtletasInvalidosError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AtletasInvalidosError class	instanceVariableNames: ''!!AtletasInvalidosError class methodsFor: 'exceptioninstantiator' stamp: 'ValentinoCeniceros 9/22/2024 17:50'!signal	^self new signal:'criterio solo admite sets con cantidad mayores a 1'! !!AtletasInvalidosError class methodsFor: 'as yet unclassified' stamp: 'ValentinoCeniceros 9/23/2024 01:10'!condicionDeError: unCriterio	^ ((unCriterio class = Set) not or: [unCriterio isEmpty]).! !Object subclass: #Criterio	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Criterio methodsFor: 'as yet unclassified' stamp: 'ValentinoCeniceros 9/22/2024 17:59'!obtenerAtletaPorCriterio: unosAtletas	self subclassResponsibility .! !Error subclass: #CriterioInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CriterioInvalidoError class	instanceVariableNames: ''!!CriterioInvalidoError class methodsFor: 'exceptioninstantiator' stamp: 'ValentinoCeniceros 9/22/2024 17:30'!signal	^self new signal:'Un criterio solo puede ser fuerte o debil'! !!CriterioInvalidoError class methodsFor: 'as yet unclassified' stamp: 'ValentinoCeniceros 9/23/2024 00:47'!condicionDeError: unCriterio	^( unCriterio  ~= 'Fuerte' and:[unCriterio  ~= 'Debil'])! !Criterio subclass: #Debil	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Debil methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:37'!obtenerAtletaPorCriterio: unosAtletas(AtletasInvalidosError condicionDeError: unosAtletas ) ifTrue: [ AtletasInvalidosError signal].^ unosAtletas detectMin: [:unAtleta | unAtleta calcularPesoMaximo ]! !Error subclass: #EdadInvalidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EdadInvalidaError class	instanceVariableNames: ''!!EdadInvalidaError class methodsFor: 'exceptioninstantiator' stamp: 'ValentinoCeniceros 9/22/2024 12:40'!signal	^ self new signal: 'La edad debe estar entre 16 y 55 aÃ±os.'! !!EdadInvalidaError class methodsFor: 'as yet unclassified' stamp: 'ValentinoCeniceros 9/23/2024 00:14'!condicionDeError: unaEdad	^   (16 > unaEdad or: [unaEdad > 55])! !Criterio subclass: #Fuerte	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Fuerte methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:37'!obtenerAtletaPorCriterio: unosAtletas(AtletasInvalidosError condicionDeError: unosAtletas ) ifTrue: [ AtletasInvalidosError signal].	   ^ unosAtletas detectMax:[:unAtleta | unAtleta calcularPesoMaximo ]! !Error subclass: #NacionInvalidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NacionInvalidaError class	instanceVariableNames: ''!!NacionInvalidaError class methodsFor: 'as yet unclassified' stamp: 'ValentinoCeniceros 9/23/2024 00:25'!condicionDeError: unaNacion	^ (unaNacion isString  not or:[unaNacion size < 3])! !!NacionInvalidaError class methodsFor: 'exceptioninstantiator' stamp: 'ValentinoCeniceros 9/22/2024 12:59'!signal	^self new signal: 'La nacionalidad debe ser un string mayor a 3 caracteres'! !Error subclass: #NombreAtletaInvalido	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NombreAtletaInvalido class	instanceVariableNames: ''!!NombreAtletaInvalido class methodsFor: 'exceptioninstantiator' stamp: 'ValentinoCeniceros 9/22/2024 13:53'!signal	^self new signal: 'Un nombre debe ser un string mayor a 3 caracteres'! !!NombreAtletaInvalido class methodsFor: 'as yet unclassified' stamp: 'ValentinoCeniceros 9/23/2024 00:21'!condicionDeError: unNombre	^ (unNombre isString not or: [unNombre size < 3])! !Object subclass: #Peso	instanceVariableNames: 'valorNumerico'	classVariableNames: ''	package: 'TP1'!!Peso methodsFor: 'comparing' stamp: 'ValentinoCeniceros 9/21/2024 14:11'!> unPeso ^valorNumerico > unPeso obtenerValorNumerico ! !!Peso methodsFor: 'comparing' stamp: 'ValentinoCeniceros 9/21/2024 14:11'!< unPeso ^valorNumerico < unPeso obtenerValorNumerico ! !!Peso methodsFor: 'not defined category' stamp: '9/14/2024 14:19'!obtenerValorNumerico	^ valorNumerico ! !!Peso methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 20:45'!compararPesoEnLunaCon: unPeso precision: unaPrecision 	self convertirAPesoLunar .	^ unPeso closeTo: valorNumerico  precision: unaPrecision .! !!Peso methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 20:46'!compararCon: unPeso precision: unaPrecision 	^ unPeso closeTo: valorNumerico precision: unaPrecision .! !!Peso methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 14:15'!deValor: unValor	valorNumerico := unValor .	self ! !!Peso methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:18'!multiplicarPor: unNumero 	(PesoInvalidoError condicionDeError: unNumero ) ifTrue: [ PesoInvalidoError signal  ].	valorNumerico := valorNumerico * unNumero .! !!Peso methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 13:12'!convertirAPesoLunar	|pesoLunar|	pesoLunar := (1.625 / 9.81).	valorNumerico := valorNumerico * pesoLunar ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Peso class	instanceVariableNames: ''!!Peso class methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:17'!deValor: unValor	(PesoInvalidoError condicionDeError: unValor ) ifTrue: [ PesoInvalidoError signal  ].	^self new deValor: unValor ! !Error subclass: #PesoInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PesoInvalidoError class	instanceVariableNames: ''!!PesoInvalidoError class methodsFor: 'as yet unclassified' stamp: 'ValentinoCeniceros 9/23/2024 00:18'!condicionDeError: unPeso	^ unPeso <= 0! !!PesoInvalidoError class methodsFor: 'exceptioninstantiator' stamp: 'ValentinoCeniceros 9/22/2024 13:21'!signal	^self new signal: 'Los pesos no pueden ser menores o iguales a 0'! !Object subclass: #Porcentualizador	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Porcentualizador methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:12'!calcularPorcentaje: unPeso	self subclassResponsibility ! !Porcentualizador subclass: #Condicion	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Porcentualizador subclass: #Edad	instanceVariableNames: 'plenitud'	classVariableNames: ''	package: 'TP1'!!Edad methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 21:00'!calcularPorcentaje: unPeso	^ plenitud calcularPorcentaje: unPeso! !!Edad methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 21:00'!edad: unaPlenitud yAltura: unaAltura  	 plenitud := unaPlenitud deAltura: unaAltura .	 self ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Edad class	instanceVariableNames: ''!!Edad class methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:16'!deEdad: plenitud conAltura: unaAltura	(AlturaInvalidaError condicionDeError: unaAltura ) ifTrue: [ AlturaInvalidaError signal].	^ self new edad: plenitud   yAltura: unaAltura . 	! !Condicion subclass: #Lejano	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Lejano methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:12'!calcularPorcentaje: unPeso	^unPeso .! !Condicion subclass: #Limitrofe	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Limitrofe methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:13'!calcularPorcentaje: unPeso	^unPeso multiplicarPor: 1.10	! !Condicion subclass: #Local	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Local methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:14'!calcularPorcentaje: unPeso	^unPeso multiplicarPor: 1.25.! !Porcentualizador subclass: #Nacionalidad	instanceVariableNames: 'condicion'	classVariableNames: ''	package: 'TP1'!!Nacionalidad methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:15'!calcularPorcentaje: unPeso	^ condicion calcularPorcentaje: unPeso! !!Nacionalidad methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 16:30'!deCondicion:unaCondicion	condicion  := unaCondicion .	self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Nacionalidad class	instanceVariableNames: 'condicion'!!Nacionalidad class methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 16:31'!deCondicion:unaCondicion	^self new deCondicion: unaCondicion .! !Porcentualizador subclass: #Plenitud	instanceVariableNames: 'altura'	classVariableNames: ''	package: 'TP1'!!Plenitud methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:14'!calcularPorcentaje: unPeso	self subclassResponsibility ! !!Plenitud methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 16:38'!deAltura: unaAltura 	altura := unaAltura   .	self! !Plenitud subclass: #Joven	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Joven methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:15'!calcularPorcentaje: unPeso	^unPeso multiplicarPor:( altura * (altura - 1)).! !Object subclass: #SeleccionadorDeCriterio	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!SeleccionadorDeCriterio methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:43'!seleccionar: unCriterio	|criterio|	(unCriterio = 'Fuerte') ifTrue: [ criterio := Fuerte new ]ifFalse: [ criterio := Debil new ].	^criterio ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SeleccionadorDeCriterio class	instanceVariableNames: ''!!SeleccionadorDeCriterio class methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:44'!seleccionar: unCriterio	(CriterioInvalidoError condicionDeError: unCriterio ) ifTrue: [ CriterioInvalidoError signal  ].	 ^self new seleccionar: unCriterio! !Object subclass: #SeleccionadorDeEdad	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!SeleccionadorDeEdad methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:28'!seleccionar: unaEdad yAltura: unaAltura	|plenitud|	(unaEdad <= 30) ifTrue: [ plenitud := Joven new  ] ifFalse: [ plenitud := Veterano new ].	^ Edad deEdad: plenitud  conAltura: unaAltura . ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SeleccionadorDeEdad class	instanceVariableNames: ''!!SeleccionadorDeEdad class methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:28'!seleccionar: unaEdad yAltura: unaAltura	(EdadInvalidaError condicionDeError: unaEdad ) ifTrue: [ EdadInvalidaError signal] .	^self new seleccionar: unaEdad yAltura: unaAltura ! !Object subclass: #SeleccionadorDeNacion	instanceVariableNames: 'local limitrofes'	classVariableNames: ''	package: 'TP1'!!SeleccionadorDeNacion methodsFor: 'initialization' stamp: 'ValentinoCeniceros 9/22/2024 18:21'!initialize 	local := 'Francia'.	limitrofes := #('EspaÃ±a' 'Italia' 'Alemania' 'Belgica' 'Suiza').! !!SeleccionadorDeNacion methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:27'!seleccionar: unaNacion	|condicion|	(unaNacion = local) ifFalse: [ (limitrofes includes: unaNacion ) ifTrue: [ condicion := Limitrofe new ] ifFalse: [ condicion := Lejano new ] ] ifTrue: [ condicion := Local new ].	^ Nacionalidad deCondicion: condicion  ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SeleccionadorDeNacion class	instanceVariableNames: 'local limitrofes'!!SeleccionadorDeNacion class methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:27'!seleccionar: unaNacion	(NacionInvalidaError condicionDeError: unaNacion ) ifTrue: [NacionInvalidaError signal].	^ self new seleccionar: unaNacion ! !Plenitud subclass: #Veterano	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Veterano methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:15'!calcularPorcentaje: unPeso	^unPeso multiplicarPor: altura  .! !