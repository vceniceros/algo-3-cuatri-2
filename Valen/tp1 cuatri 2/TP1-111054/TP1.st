Object subclass: #AlgoOlimpicos	instanceVariableNames: 'criterio atletas'	classVariableNames: ''	package: 'TP1'!!AlgoOlimpicos methodsFor: 'initialization' stamp: 'ValentinoCeniceros 9/23/2024 01:09'!initialize 	atletas := Set new.! !!AlgoOlimpicos methodsFor: 'agregado' stamp: '9/15/2024 20:16'!registrarAtletaConNombre: unNombre dePeso: unPeso yAltura: unaAltura yEdad: unaEdad yNacionalidad: unaNacionalidad 	|atleta|	atleta := Atleta conNombre: unNombre yPeso: unPeso yAltura: unaAltura yEdad: unaEdad yNacionalidad: unaNacionalidad .	atletas add: atleta ! !!AlgoOlimpicos methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 14:02'!pesoMaximoDe: unAtleta 	 ^ (atletas detect: [:atletaEnLista | atletaEnLista compararNombre: unAtleta]) calcularPesoMaximo.! !!AlgoOlimpicos methodsFor: 'not defined category' stamp: '9/16/2024 20:27'!obtenerAtletaSegunCriterio	^ (criterio obtenerAtletaPorCriterio: atletas ) darNombre ! !!AlgoOlimpicos methodsFor: 'constructor' stamp: 'ValentinoCeniceros 9/22/2024 17:31'!conCriterioMas: unCriterio 	criterio := SeleccionadorDeCriterio seleccionar: unCriterio . 	self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoOlimpicos class	instanceVariableNames: ''!!AlgoOlimpicos class methodsFor: 'constructor' stamp: 'ValentinoCeniceros 9/22/2024 17:23'!conCriterioMas:unCriterio	^self new conCriterioMas: unCriterio ! !Error subclass: #AlturaInvalidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Atleta	instanceVariableNames: 'nombre edad nacionalidad pesoAtleta'	classVariableNames: ''	package: 'TP1'!!Atleta methodsFor: 'not defined category' stamp: '9/13/2024 20:31'!darNombre	^nombre.! !!Atleta methodsFor: 'not defined category' stamp: '9/15/2024 20:23'!compararNombre: unAtleta	^nombre = unAtleta  .! !!Atleta methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 14:07'!calcularPesoMaximo   ^edad calcularPorcentaje: (nacionalidad calcularPorcentaje: pesoAtleta).! !!Atleta methodsFor: 'constructor' stamp: 'ValentinoCeniceros 9/23/2024 00:22'!conNombre: unNombre yPeso: unPeso  yAltura: unaAltura yEdad: unaEdad  yNacionalidad: unaNacionalidad 	nombre := unNombre .	pesoAtleta := Peso deValor: unPeso .	edad := SeleccionadorDeEdad seleccionar: unaEdad  yAltura: unaAltura . 	nacionalidad := SeleccionadorDeNacion seleccionar: unaNacionalidad  .	self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Atleta class	instanceVariableNames: ''!!Atleta class methodsFor: 'constructor' stamp: 'vc 9/25/2024 20:27'!conNombre: unNombre yPeso: unPeso yAltura: unaAltura yEdad: unaEdad yNacionalidad: unaNacionalidad	(unNombre isString not or: [unNombre size < 3]) ifTrue: [NombreAtletaInvalidoError signal: 'Un nombre debe ser un string mayor a 3 caracteres' ].	^self new conNombre:  unNombre yPeso: unPeso  yAltura: unaAltura   yEdad: unaEdad  yNacionalidad: unaNacionalidad ! !Object subclass: #CalculadorDePorcentajes	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CalculadorDePorcentajes methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:12'!calcularPorcentaje: unPeso	self subclassResponsibility ! !CalculadorDePorcentajes subclass: #Condicion	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Criterio	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Criterio methodsFor: 'as yet unclassified' stamp: 'ValentinoCeniceros 9/22/2024 17:59'!obtenerAtletaPorCriterio: unosAtletas	self subclassResponsibility .! !Error subclass: #CriterioInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Criterio subclass: #Debil	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Debil methodsFor: 'not defined category' stamp: 'vc 9/25/2024 20:09'!obtenerAtletaPorCriterio: unosAtletas^ unosAtletas detectMin: [:unAtleta | unAtleta calcularPesoMaximo ]! !CalculadorDePorcentajes subclass: #Edad	instanceVariableNames: 'plenitud'	classVariableNames: ''	package: 'TP1'!!Edad methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 21:00'!edad: unaPlenitud yAltura: unaAltura  	 plenitud := unaPlenitud deAltura: unaAltura .	 self ! !!Edad methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 21:00'!calcularPorcentaje: unPeso	^ plenitud calcularPorcentaje: unPeso! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Edad class	instanceVariableNames: ''!!Edad class methodsFor: 'not defined category' stamp: 'vc 9/25/2024 19:59'!deEdad: plenitud conAltura: unaAltura		^ self new edad: plenitud   yAltura: unaAltura . 	! !Error subclass: #EdadInvalidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Criterio subclass: #Fuerte	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Fuerte methodsFor: 'not defined category' stamp: 'vc 9/25/2024 20:09'!obtenerAtletaPorCriterio: unosAtletas	   ^ unosAtletas detectMax:[:unAtleta | unAtleta calcularPesoMaximo ]! !Condicion subclass: #Lejano	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Lejano methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:12'!calcularPorcentaje: unPeso	^unPeso .! !Condicion subclass: #Limitrofe	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Limitrofe methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:13'!calcularPorcentaje: unPeso	^unPeso multiplicarPor: 1.10	! !Condicion subclass: #Local	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Local methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:14'!calcularPorcentaje: unPeso	^unPeso multiplicarPor: 1.25.! !Error subclass: #NacionInvalidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!CalculadorDePorcentajes subclass: #Nacionalidad	instanceVariableNames: 'condicion'	classVariableNames: ''	package: 'TP1'!!Nacionalidad methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 16:30'!deCondicion:unaCondicion	condicion  := unaCondicion .	self! !!Nacionalidad methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:15'!calcularPorcentaje: unPeso	^ condicion calcularPorcentaje: unPeso! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Nacionalidad class	instanceVariableNames: 'condicion'!!Nacionalidad class methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 16:31'!deCondicion:unaCondicion	^self new deCondicion: unaCondicion .! !Error subclass: #NombreAtletaInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Peso	instanceVariableNames: 'valorNumerico'	classVariableNames: ''	package: 'TP1'!!Peso methodsFor: 'not defined category' stamp: 'vc 9/25/2024 19:50'!multiplicarPor: unNumero 	unNumero  <= 0 ifTrue: [PesoInvalidoError signal: 'Los pesos no pueden ser menores o iguales a 0'].	valorNumerico := valorNumerico * unNumero .! !!Peso methodsFor: 'not defined category' stamp: '9/14/2024 14:19'!obtenerValorNumerico	^ valorNumerico ! !!Peso methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 20:46'!compararCon: unPeso precision: unaPrecision 	^ unPeso closeTo: valorNumerico precision: unaPrecision .! !!Peso methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 20:45'!compararPesoEnLunaCon: unPeso precision: unaPrecision 	self convertirAPesoLunar .	^ unPeso closeTo: valorNumerico  precision: unaPrecision .! !!Peso methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 14:15'!deValor: unValor	valorNumerico := unValor .	self ! !!Peso methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 13:12'!convertirAPesoLunar	|pesoLunar|	pesoLunar := (1.625 / 9.81).	valorNumerico := valorNumerico * pesoLunar ! !!Peso methodsFor: 'comparing' stamp: 'ValentinoCeniceros 9/21/2024 14:11'!> unPeso ^valorNumerico > unPeso obtenerValorNumerico ! !!Peso methodsFor: 'comparing' stamp: 'ValentinoCeniceros 9/21/2024 14:11'!< unPeso ^valorNumerico < unPeso obtenerValorNumerico ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Peso class	instanceVariableNames: ''!!Peso class methodsFor: 'not defined category' stamp: 'vc 9/25/2024 19:49'!deValor: unValor	 unValor <= 0 ifTrue: [PesoInvalidoError signal: 'Los pesos no pueden ser menores o iguales a 0'].	^self new deValor: unValor ! !Error subclass: #PesoInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!CalculadorDePorcentajes subclass: #Plenitud	instanceVariableNames: 'altura'	classVariableNames: ''	package: 'TP1'!!Plenitud methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:14'!calcularPorcentaje: unPeso	self subclassResponsibility ! !!Plenitud methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/22/2024 16:38'!deAltura: unaAltura 	altura := unaAltura   .	self! !Plenitud subclass: #Joven	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Joven methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:15'!calcularPorcentaje: unPeso	^unPeso multiplicarPor:( altura * (altura - 1)).! !Object subclass: #SeleccionadorDeCriterio	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!SeleccionadorDeCriterio methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:43'!seleccionar: unCriterio	|criterio|	(unCriterio = 'Fuerte') ifTrue: [ criterio := Fuerte new ]ifFalse: [ criterio := Debil new ].	^criterio ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SeleccionadorDeCriterio class	instanceVariableNames: ''!!SeleccionadorDeCriterio class methodsFor: 'not defined category' stamp: 'vc 9/25/2024 20:16'!seleccionar: unCriterio	(#('Fuerte' 'Debil') includes: unCriterio )ifFalse: [ CriterioInvalidoError signal: 'Un criterio solo puede ser fuerte o debil' ].	 ^self new seleccionar: unCriterio! !Object subclass: #SeleccionadorDeEdad	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!SeleccionadorDeEdad methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:28'!seleccionar: unaEdad yAltura: unaAltura	|plenitud|	(unaEdad <= 30) ifTrue: [ plenitud := Joven new  ] ifFalse: [ plenitud := Veterano new ].	^ Edad deEdad: plenitud  conAltura: unaAltura . ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SeleccionadorDeEdad class	instanceVariableNames: ''!!SeleccionadorDeEdad class methodsFor: 'not defined category' stamp: 'vc 9/25/2024 20:10'!seleccionar: unaEdad yAltura: unaAltura	(unaAltura < 1.25 ) ifTrue: [ AlturaInvalidaError signal: 'La altura minima es 1.25.'].	 (16 > unaEdad) ifTrue: [ EdadInvalidaError signal: 'La edad debe estar entre 16 y 55 años.'] .	(unaEdad > 55) ifTrue: [ EdadInvalidaError signal: 'La edad debe estar entre 16 y 55 años.'] .	^self new seleccionar: unaEdad yAltura: unaAltura ! !Object subclass: #SeleccionadorDeNacion	instanceVariableNames: 'local limitrofes'	classVariableNames: ''	package: 'TP1'!!SeleccionadorDeNacion methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/23/2024 00:27'!seleccionar: unaNacion	|condicion|	(unaNacion = local) ifFalse: [ (limitrofes includes: unaNacion ) ifTrue: [ condicion := Limitrofe new ] ifFalse: [ condicion := Lejano new ] ] ifTrue: [ condicion := Local new ].	^ Nacionalidad deCondicion: condicion  ! !!SeleccionadorDeNacion methodsFor: 'initialization' stamp: 'ValentinoCeniceros 9/22/2024 18:21'!initialize 	local := 'Francia'.	limitrofes := #('España' 'Italia' 'Alemania' 'Belgica' 'Suiza').! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SeleccionadorDeNacion class	instanceVariableNames: 'local limitrofes'!!SeleccionadorDeNacion class methodsFor: 'not defined category' stamp: 'vc 9/25/2024 19:54'!seleccionar: unaNacion	(unaNacion isString  not or:[unaNacion size < 3] ) ifTrue: [NacionInvalidaError signal: 'La nacionalidad debe ser un string mayor a 3 caracteres'].	^ self new seleccionar: unaNacion ! !Plenitud subclass: #Veterano	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Veterano methodsFor: 'not defined category' stamp: 'ValentinoCeniceros 9/21/2024 11:15'!calcularPorcentaje: unPeso	^unPeso multiplicarPor: altura  .! !