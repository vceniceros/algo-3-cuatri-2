TestCase subclass: #CalculadoraTest	instanceVariableNames: ''	classVariableNames: ''	package: 'contabilidad test'!!CalculadoraTest methodsFor: 'tests' stamp: '9/2/2024 20:22'!test01CalculadoraSuma2NumerosEnteros"arrange"|calculadora unNumero otroNumero respuestaCorrecta respuesta|calculadora := Calculadora new.unNumero := 10.otroNumero := 5.respuestaCorrecta := 15."act"respuesta := calculadora sumar:unNumero y:otroNumero."assert"self assert: respuesta equals: respuestaCorrecta.! !!CalculadoraTest methodsFor: 'tests' stamp: '9/2/2024 20:23'!test02CalculadoraSuma2NumerosFlotantes"arrange"|calculadora unNumero otroNumero respuestaCorrecta respuesta|calculadora := Calculadora new.unNumero := 0.5.otroNumero := 1.5.respuestaCorrecta := 2."act"respuesta := calculadora sumar:unNumero y:otroNumero."assert"self assert: respuesta equals: respuestaCorrecta.! !!CalculadoraTest methodsFor: 'tests' stamp: '9/2/2024 20:36'!test03CalculadoraHaceElProductoDeDosNumerosConDosCifraSignificativa"arrange"|calculadora unNumero otroNumero respuestaCorrecta respuesta|calculadora := Calculadora new.unNumero := 3.1415.otroNumero := 7.2891.respuestaCorrecta := 22.90."act"respuesta := calculadora multiplicar:unNumero y:otroNumero."assert"self assert: respuesta closeTo: respuestaCorrecta precision: 0.01.! !!CalculadoraTest methodsFor: 'tests' stamp: '9/2/2024 20:38'!test04CalculadoraHaceElFactorialDeUnNumeroEntero"arrange"|calculadora unNumero respuestaCorrecta respuesta|calculadora := Calculadora new.unNumero := 5.respuestaCorrecta := 120."act"respuesta := calculadora factorial:unNumero. "assert"self assert: respuesta equals: respuestaCorrecta .! !!CalculadoraTest methodsFor: 'tests' stamp: '9/2/2024 20:54'!test05CalculadoraCalculaLaTasaDeInflacion"arrange"|calculadora unValorInicial unPorcentaje respuestaCorrecta respuesta|calculadora := Calculadora new.unValorInicial := 1500.unPorcentaje := 4.5.respuestaCorrecta := 1567.5 ."act"respuesta := calculadora ajustarInflacionDe: unValorInicial conPorcentaje: unPorcentaje. "assert"self assert: respuesta closeTo: respuestaCorrecta precision: 0.01.! !