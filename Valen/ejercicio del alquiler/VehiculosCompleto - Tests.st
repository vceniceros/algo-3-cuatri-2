TestCase subclass: #AgenciaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto - Tests'!!AgenciaTest methodsFor: 'tests' stamp: 'JG 4/27/2024 19:56'!test03AlPedirLosAlquileresTotalesDaElPrecioCorrecto| microbus camion agencia precioEsperado precioObtenido cliente cliente2|agencia := Agencia new.microbus := Microbus conPatente: 'abc123'.camion := Camion conPatente: 'def456'.cliente := Cliente conNombre: 'Diego'.cliente2 := Cliente conNombre: 'Santiago'.precioEsperado := (((1500*3) + 500 + 30000)*2) + 30000.agencia registrarVehiculo: microbus.agencia registrarVehiculo: camion.agencia registrarCliente: cliente.agencia registrarCliente: cliente2.agencia registrarAlquilerDe: camion para: cliente porDias: 3.agencia registrarAlquilerDe: microbus para: cliente porDias: 3.agencia registrarAlquilerDe: camion para: cliente2 porDias: 3.agencia registrarAlquilerDe: camion para: cliente2 porDias: 1.agencia registrarAlquilerDe: microbus para: cliente2 porDias: 3.precioObtenido := agencia calcularAlquileresTotales.self assert: precioObtenido equals: precioEsperado.! !!AgenciaTest methodsFor: 'tests' stamp: 'JG 4/27/2024 19:07'!test01AlRegistrarUnVehiculoConUnaPatenteYaRegistradaSeLanzaExcepcion| microbus camion agencia |microbus := Microbus conPatente: 'abc123'.camion := Camion conPatente: 'abc123'.agencia := Agencia new.agencia registrarVehiculo: microbus.self should: [ agencia registrarVehiculo: camion ] raise: VehiculoYaRegistradoError.! !!AgenciaTest methodsFor: 'tests' stamp: 'JG 4/27/2024 19:42'!test02AlPedirLosAlquileresDeUnClienteDaElPrecioCorrecto| microbus camion agencia precioEsperado precioObtenido cliente |agencia := Agencia new.microbus := Microbus conPatente: 'abc123'.camion := Camion conPatente: 'def456'.cliente := Cliente conNombre: 'Diego'.precioEsperado := (1500*3) + 500 + 30000.agencia registrarVehiculo: microbus.agencia registrarVehiculo: camion.agencia registrarCliente: cliente.agencia registrarAlquilerDe: camion para: cliente porDias: 3.agencia registrarAlquilerDe: microbus para: cliente porDias: 3.precioObtenido := agencia calcularAlquilerParaCliente: cliente.self assert: precioObtenido equals: precioEsperado.! !TestCase subclass: #CamionTest	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto - Tests'!!CamionTest methodsFor: 'tests' stamp: 'JG 4/27/2024 18:33'!test01AlAlquilarUnCamionPor3DiasElPrecioEsElCorrecto| precioObtenido precioEsperado camion |camion := Camion conPatente: 'abc123'.precioEsperado := 30000.precioObtenido := camion calcularAlquilerPorDias: 3.self assert: precioObtenido equals: precioEsperado.! !TestCase subclass: #CocheTest	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto - Tests'!!CocheTest methodsFor: 'tests' stamp: 'JG 4/27/2024 17:25'!test01AlAlquilarUnAutoPor3DiasElPrecioEsElCorrecto| precioObtenido precioEsperado coche |coche := Coche conPatente: 'abc123' conPlazas: 4 deCategoria: (Normal new) yBlindado: (SinBlindar new).precioEsperado := ( 500 "base" + (4*100) "plazas" ) * 3 "dias".precioObtenido := coche calcularAlquilerPorDias: 3.self assert: precioObtenido equals: precioEsperado.! !!CocheTest methodsFor: 'tests' stamp: 'JG 4/27/2024 17:21'!test03AlAlquilarUnAutoBlindadoPor3DiasElPrecioEsElCorrecto| precioObtenido precioEsperado coche |coche := Coche conPatente: 'abc123' conPlazas: 4 deCategoria: (Normal new) yBlindado: (Blindado new).precioEsperado := ( 500 "base" + (4*100) "plazas" ) * 3 "dias".precioEsperado := precioEsperado * 1.15.precioObtenido := coche calcularAlquilerPorDias: 3.self assert: precioObtenido equals: precioEsperado.! !!CocheTest methodsFor: 'tests' stamp: 'JG 4/27/2024 17:25'!test02AlAlquilarUnAutoPremiumPor3DiasElPrecioEsElCorrecto| precioObtenido precioEsperado coche |coche := Coche conPatente: 'abc123' conPlazas: 4 deCategoria: (Premium new) yBlindado: (SinBlindar new).precioEsperado := ( 500 "base" + (4*150) "plazas" ) * 3 "dias".precioObtenido := coche calcularAlquilerPorDias: 3.self assert: precioObtenido equals: precioEsperado.! !TestCase subclass: #FurgonetaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto - Tests'!!FurgonetaTest methodsFor: 'tests' stamp: 'JG 4/27/2024 18:29'!test01AlAlquilarUnaFurgonetaPor3DiasElPrecioEsElCorrecto| precioObtenido precioEsperado furgo |furgo := Furgoneta conPatente: 'abc123' yPMA: 3.2 .precioEsperado := ((300* 3.2 ) + 500 )*3 .precioObtenido := furgo calcularAlquilerPorDias: 3.self assert: precioObtenido equals: precioEsperado.! !TestCase subclass: #MicrobusTest	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto - Tests'!!MicrobusTest methodsFor: 'tests' stamp: 'JG 4/27/2024 18:23'!test01AlAlquilarUnMicrobusPor3DiasElPrecioEsElCorrecto| precioObtenido precioEsperado microbus |microbus := Microbus conPatente: 'abc123'.precioEsperado := (1500*3) + 500.precioObtenido := microbus calcularAlquilerPorDias: 3.self assert: precioObtenido equals: precioEsperado.! !