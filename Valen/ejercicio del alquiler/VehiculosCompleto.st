Object subclass: #Agencia	instanceVariableNames: 'vehiculos clientes'	classVariableNames: ''	package: 'VehiculosCompleto'!!Agencia methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:28'!buscarVehiculo: unVehiculo	| vehiculo |	vehiculo := vehiculos  detect: [ :v | v vehiculoTienePatente: unVehiculo] ifNone:[ VehiculoNoRegistradoError signal ]. 	^ vehiculo! !!Agencia methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:36'!calcularAlquilerParaCliente: unCliente 	| cliente |	cliente := self buscarCliente: unCliente.	^ cliente calcularAlquileres.! !!Agencia methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:54'!calcularAlquileresTotales	^ clientes inject: 0 into: [ :total :cliente | total + (cliente calcularAlquileres) ].! !!Agencia methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:07'!registrarVehiculo: unVehiculo  | vehiculosMismaPatente |vehiculosMismaPatente := vehiculos select: [ :vehiculo | vehiculo vehiculoTienePatente: unVehiculo].vehiculosMismaPatente ifNotEmpty: [ VehiculoYaRegistradoError signal ].vehiculos add: unVehiculo.! !!Agencia methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:25'!buscarCliente: unCliente 	| cliente |	cliente := clientes detect: [ :c | c clienteTieneMismoNombre: unCliente] ifNone:[ ClienteNoRegistradoError signal ]. 	^ cliente! !!Agencia methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:53'!registrarAlquilerDe: unVehiculo para: unCliente porDias: unosDias 	| cliente vehiculo |	cliente := self buscarCliente: unCliente.	vehiculo := self buscarVehiculo: unVehiculo.	cliente registrarAlquilerDe: vehiculo porDias: unosDias. ! !!Agencia methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:08'!registrarCliente: unClienteclientes add: unCliente.! !!Agencia methodsFor: 'initialization' stamp: 'JG 4/27/2024 19:07'!initializevehiculos := OrderedCollection new.clientes := OrderedCollection new.! !Object subclass: #Alquiler	instanceVariableNames: 'vehiculo dias'	classVariableNames: ''	package: 'VehiculosCompleto'!!Alquiler methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:51'!de: unVehiculo por: unosDias.		vehiculo := unVehiculo.	dias := unosDias.! !!Alquiler methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:52'!costo	^ vehiculo calcularAlquilerPorDias: dias.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Alquiler class	instanceVariableNames: 'vehiculo dias'!!Alquiler class methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:50'!de: unVehiculo por: unosDias	| alquiler |	alquiler := self new.	alquiler de: unVehiculo por: unosDias.	^ alquiler! !Object subclass: #Blindado	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto'!!Blindado methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 17:27'!modificarPrecio: unPrecio 	^ unPrecio * 1.15! !Object subclass: #Categoria	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto'!!Categoria methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 17:19'!calcularPrecioPorPlazas: unasPlazas self subclassResponsibility.! !Object subclass: #Cliente	instanceVariableNames: 'nombre alquileres'	classVariableNames: ''	package: 'VehiculosCompleto'!!Cliente methodsFor: 'initialization' stamp: 'JG 4/27/2024 19:29'!initialize alquileres := OrderedCollection new.! !!Cliente methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:26'!clienteTieneMismoNombre: unCliente	^ unCliente tieneMismoNombre: nombre.! !!Cliente methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:26'!tieneMismoNombre: unNombre	^ (nombre = unNombre)! !!Cliente methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:53'!registrarAlquilerDe: unVehiculo porDias: unosDias 	| unAlquiler |	unAlquiler := Alquiler de: unVehiculo por: unosDias.	alquileres add: unAlquiler.! !!Cliente methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:17'!conNombre: unNombre 	nombre := unNombre.! !!Cliente methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:33'!calcularAlquileres	^ alquileres inject: 0 into: [ :total :alquiler | total + (alquiler costo) ].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cliente class	instanceVariableNames: ''!!Cliente class methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:16'!conNombre: unNombre 	| cliente |	cliente := self new.	cliente conNombre: unNombre.	^ cliente! !Error subclass: #ClienteNoRegistradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto'!Categoria subclass: #Normal	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto'!!Normal methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 17:15'!calcularPrecioPorPlazas: unasPlazas 	^ unasPlazas * 100! !Categoria subclass: #Premium	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto'!!Premium methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 17:15'!calcularPrecioPorPlazas: unasPlazas 	^ unasPlazas * 150! !Object subclass: #SinBlindar	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto'!!SinBlindar methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 17:27'!modificarPrecio: unPrecio 	^ unPrecio.! !Object subclass: #Vehiculo	instanceVariableNames: 'patente'	classVariableNames: ''	package: 'VehiculosCompleto'!!Vehiculo methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 19:00'!vehiculoTienePatente: unVehiculo 	^ unVehiculo tienePatente: patente.! !!Vehiculo methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:35'!calcularAlquilerPorDias: unosDias self subclassResponsibility.! !!Vehiculo methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:39'!tienePatente: unaPatente	^ (patente = unaPatente)! !Vehiculo subclass: #Camion	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto'!!Camion methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:58'!conPatente: unaPatente 	patente := unaPatente.! !!Camion methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:34'!calcularAlquilerPorDias: unosDias 	^ 30000! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Camion class	instanceVariableNames: ''!!Camion class methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:33'!conPatente: unaPatente 	| camion |	camion := self new.	camion conPatente: unaPatente.	^ camion! !Vehiculo subclass: #Coche	instanceVariableNames: 'categoria plazas precioBase blindado'	classVariableNames: ''	package: 'VehiculosCompleto'!!Coche methodsFor: 'initialization' stamp: 'JG 4/27/2024 17:14'!initialize precioBase := 500! !!Coche methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 17:26'!calcularAlquilerPorDias: unosDias 	| precioPlazas |	precioPlazas := categoria calcularPrecioPorPlazas: plazas.	^ blindado modificarPrecio:((precioBase + precioPlazas) * unosDias)! !!Coche methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:58'!conPatente: unaPatente conPlazas: unasPlazas deCategoria: unaCategoria yBlindado: unBlindado	patente := unaPatente.	categoria := unaCategoria.	plazas := unasPlazas.	blindado := unBlindado.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Coche class	instanceVariableNames: ''!!Coche class methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 17:24'!conPatente: unaPatente conPlazas: unasPlazas deCategoria: unaCategoria yBlindado: unBlindado	| coche |	coche := self new.	coche conPatente: unaPatente conPlazas: unasPlazas deCategoria: unaCategoria yBlindado: unBlindado.	^coche.! !Vehiculo subclass: #Furgoneta	instanceVariableNames: 'pma'	classVariableNames: ''	package: 'VehiculosCompleto'!!Furgoneta methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:58'!conPatente: unaPatente yPMA: unPMA	patente := unaPatente.	pma := unPMA.! !!Furgoneta methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:31'!calcularAlquilerPorDias: unosDias 	^ ((300 * pma) + 500) * unosDias ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Furgoneta class	instanceVariableNames: ''!!Furgoneta class methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:29'!conPatente: unaPatente yPMA: unPMA 	| furgo |	furgo := self new.	furgo conPatente: unaPatente yPMA: unPMA.	^ furgo! !Vehiculo subclass: #Microbus	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto'!!Microbus methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:58'!conPatente: unaPatente 	patente := unaPatente.! !!Microbus methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:25'!calcularAlquilerPorDias: unosDias 	^ (1500 * unosDias) + 500! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Microbus class	instanceVariableNames: ''!!Microbus class methodsFor: 'as yet unclassified' stamp: 'JG 4/27/2024 18:24'!conPatente: unaPatente 	| microbus |	microbus := self new.	microbus conPatente: unaPatente. 	^ microbus! !Error subclass: #VehiculoNoRegistradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto'!Error subclass: #VehiculoYaRegistradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'VehiculosCompleto'!